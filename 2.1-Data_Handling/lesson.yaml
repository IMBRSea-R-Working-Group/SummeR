- Class: meta
  Course: imbrseaR
  Lesson: Data Handling
  Author: your name goes here
  Type: Standard
  Organization: your organization's name goes here
  Version: 2.4.5
  
- Class: text
  Output: Welcome to the Data Handling lesson!  This will be split into three part to give you are easy ride to the wonderful world of R!

- Class: text
  Output: In this lesson, you will learn how to set the working directory, import and export data.

- Class: text
  Output: We start with setting the working directory. The working directory is the local folder on your computer from which you import a dataset and where your work can be saved after working. You can only have one working directory active at a given time.

- Class: text
  Output: To see your current working directory, use getwd().

- Class: cmd_question
  Output: Verify in which working directory your work is located now
  CorrectAnswer: getwd()
  AnswerTests: omnitest(correctExpr='getwd()')
  Hint: Look at the command given in the previous line.
  
- Class: figure
  Output: You can see the list of folders in your current directory below. Can you see the folders':' 
  Figure: Directory_tree.R
  FigureType: new
  
- Class: text
  Output: Similarly, you can set a working directory to your preferred location using 'setwd(<Your preferred location>)'. In between the bracket, you place the folder path. In windows you do some like "C:/Ocean/IMBRSea/Rcourse" in macs OS and Linux you can use "~/Ocean/IMBRSea/Rcourse" assuming Rcourse is a real folder in your machine. Okay.
  
- Class: cmd_question
  Output: There is a directory called '2.1-Data_Handling' in the current directory you are in. Set this directory to be your new current directory
  CorrectAnswer: setwd("2.1-Data_Handling")
  AnswerTests: any_of_exprs('setwd("2.1-Data_Handling")', 'setwd("2.1-Data_Handling/")')
  Hint: Look at the command given in the previous line.

- Class: text
  Output: We can now import data. R can read in many file types. The most common types you will use during the IMBRSea classes are txt, csv and excel.

- Class: text
  Output: But first let find the where the data is currently placed. We can do that by checking all the files located in the current directory. 

- Class: text
  Output: To do that, try running 'list.files()' on the console. 

- Class: cmd_question
  Output: Check the files present in the current directory using list.files()
  CorrectAnswer: list.files()
  AnswerTests: omnitest(correctExpr='list.files()')
  Hint: The answer is in the question.   

- Class: text
  Output: Good Job!! Alternatively, you can look at the 'Files' pane in the bottom right corner of RStudio. Can you see it?

- Class: text
  Output: Now, since we know how to set our working directory, get access to the list of the files in our directory, we can now read in the file we want to work on. 
  
- Class: text
  Output: We will start by reading in a text file ('.txt'). The command to use is 'read.table(file = " ")', with the text file you want to import between quotation marks. The name of the file we want to read in is 'mud_env.txt'


- Class: cmd_question
  Output: read the data found in the working directory
  CorrectAnswer: read.table("mud_env.txt")
  AnswerTests: any_of_exprs('read.table("mud_env.txt")', 'read.table(file = "mud_env.txt")')
  Hint: Put the file name inside the parentheses of the read.table(). Remember to place quotation mark ""

- Class: text
  Output: We are almost done with reading data. The data we read is fine but we still have some wrong header in the output. We need to correct this. We can do so by adding an extra argument to the function 'read.table()'

- Class: text
  Output: the argument we need is 'header = TRUE'. So re-run the previous question but this time, add the extra argument.

- Class: cmd_question
  Output: read the data found in the working directory and add the extra argument so that we data is correctly enter in 'R'
  CorrectAnswer: read.table("mud_env.txt", header = TRUE)
  AnswerTests: any_of_exprs('read.table("mud_env.txt", header = TRUE)', 'read.table(file = "mud_env.txt", header = TRUE)')
  Hint: hint   

- Class: text
  Output: One last point. Since we already import the data, it would be nice to keep this data in session to that we can start working on it. Isn't it?

- Class: text
  Output: So, let assigned this data into a R object so we can do some fantastic things with it. To do so, we used ideas from previous lesson on assignment to add in this data

- Class: cmd_question
  Output: read in the data as in previous question but this time assign the data to 'mud_env' using what you learnt from other lesson
  CorrectAnswer: mud_env <- read.table("mud_env.txt", header = TRUE)
  AnswerTests: any_of_exprs('mud_env <- read.table("mud_env.txt", header = TRUE)', 'mud_env = read.table("mud_env.txt", header = TRUE)', 'mud_env = read.table(file = "mud_env.txt", header = TRUE)', 'mud_env <- read.table(file = "mud_env.txt", header = TRUE)') 
  Hint: hint 
  
- Class: cmd_question
  Output: View the your previous data by typing 'View(mud_env)' in the console.
  CorrectAnswer: View(mud_env)
  AnswerTests: omnitest(correctExpr = 'View(mud_env)')
  
- Class: text
  Output: Similarly, you can read in other data type like csv - which stands for "comma seperated file" using the R command 'read.csv("<name of data>")'. Why don't you try to read in the fish landing data in your directory before we close? 

- Class: cmd_question
  Output: read in the 'Fish_landings.csv' file in your working directory using 'read.csv()' command. Store the data as 'fish_data' and make sure to include header. 
  CorrectAnswer: fish_data <- read.csv("Fish_landings.csv", header = TRUE)
  AnswerTests: any_of_exprs('fish_data <- read.csv("Fish_landings.csv", header = TRUE)', 'fish_data = read.csv("Fish_landings.csv", header = TRUE)', 'fish_data = read.csv(file = "Fish_landings.csv", header = TRUE)', 'fish_data <- read.csv(file = "Fish_landings.csv", header = TRUE)') 
  Hint: Remember to put header = TRUE as an extra argument. 
  
- Class: figure
  Output: ....
  Figure: cleanup.R 
  
- Class: text
  Output: Great that all for now. Bye and see you in the next lesson. 
